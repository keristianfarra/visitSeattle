{"map":"{\"version\":3,\"sources\":[\"/Users/keristianfarra/Desktop/hcde49-testrun/src/App.js\",\"/Users/keristianfarra/Desktop/hcde49-testrun/src/serviceWorker.js\",\"/Users/keristianfarra/Desktop/hcde49-testrun/src/index.js\"],\"names\":[\"TabContainer\",\"props\",\"react_default\",\"a\",\"createElement\",\"Typography_default\",\"component\",\"style\",\"padding\",\"children\",\"LinkTab\",\"Tab_default\",\"Object\",\"assign\",\"onClick\",\"event\",\"preventDefault\",\"styles\",\"paperContainer\",\"height\",\"backgroundImage\",\"concat\",\"NavTabs\",\"React\",\"Component\",\"state\",\"value\",\"handleChange\",\"_this\",\"setState\",\"classes\",\"this\",\"NoSsr_default\",\"className\",\"root\",\"AppBar_default\",\"position\",\"Tabs_default\",\"variant\",\"onChange\",\"label\",\"href\",\"withStyles\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"mRAsEA,SAASA,EAAaC,GACpB,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYG,UAAU,MAAMC,MAAO,CAAEC,QAAS,KAC3CP,EAAMQ,UASb,SAASC,EAAQT,GACf,OAAOC,EAAAC,EAAAC,cAACO,EAAAR,EAADS,OAAAC,OAAA,CAAKP,UAAU,IAAIQ,QAAS,SAAAC,GAAK,OAAIA,EAAMC,mBAAsBf,IAgB1E,IAAMgB,EAAS,CACbC,eAAgB,CACZC,OAAQ,KACRC,gBAAe,OAAAC,OAAS,0BAAT,OAYfC,GARoBC,EAAAA,EAAMC,qNAS9BC,MAAQ,CACNC,MAAO,KAGTC,aAAe,SAACZ,EAAOW,GACrBE,EAAKC,SAAS,CAAEH,MAAAA,6EAGT,IACCI,EAAYC,KAAK9B,MAAjB6B,QACAJ,EAAUK,KAAKN,MAAfC,MAER,OAEExB,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,KACED,EAAAC,EAAAC,cAAA,MAAA,CAAK6B,UAAWH,EAAQI,MACtBhC,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CAAQiC,SAAS,UACflC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAMmC,QAAQ,YAAYZ,MAAOA,EAAOa,SAAUR,KAAKJ,cACrDzB,EAAAC,EAAAC,cAACM,EAAD,CAAS8B,MAAM,YAAYC,KAAK,cAChCvC,EAAAC,EAAAC,cAACM,EAAD,CAAS8B,MAAM,gBAAgBC,KAAK,kBACpCvC,EAAAC,EAAAC,cAACM,EAAD,CAAS8B,MAAM,YAAYC,KAAK,cAChCvC,EAAAC,EAAAC,cAACM,EAAD,CAAS8B,MAAM,QAAQC,KAAK,YAGrB,IAAVf,GAAexB,EAAAC,EAAAC,cAACJ,EAAD,KAAA,aACL,IAAV0B,GAAexB,EAAAC,EAAAC,cAACJ,EAAD,KAAA,iBACL,IAAV0B,GAAexB,EAAAC,EAAAC,cAACJ,EAAD,KAAA,aACL,IAAV0B,GAAexB,EAAAC,EAAAC,cAACJ,EAAD,KAAA,kBA5BJuB,EAAAA,EAAMC,YAuCbkB,EAAAA,OAAAA,EAAAA,WAAAA,CAAWzB,EAAXyB,CAAmBpB,GC7IdqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"/* import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport Button from '@material-ui/core/Button';\\nclass App extends Component {\\n  constructor(props){\\n    super(props);\\n      this.state={\\n        numClicks:0\\n      }\\n    }\\n    handleClick= ()=>{\\n      console.log(\\\"hello world\\\");\\n        this.setState({\\n          numClicks:this.state.numClicks+1\\n        });\\n      }\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n      <div class='page'>\\n      <header>\\n        <h1>Explore Seattle like a local</h1>\\n      </header>\\n      <figure>\\n        <img src=\\\"/home.jpg\\\" alt=\\\"A picture of Seattle.\\\"/>\\n      </figure>\\n      <Button\\n        variant=\\\"contained\\\" \\n        color=\\\"primary\\\" \\n        onClick= {this.handleClick}>\\n        Transportation\\n        </Button>\\n      <Button\\n        variant=\\\"contained\\\" \\n        color=\\\"primary\\\" \\n        onClick= {this.handleClick}>\\n        Landmarks\\n      </Button>\\n      <Button\\n        variant=\\\"contained\\\" \\n        color=\\\"primary\\\" \\n        onClick= {this.handleClick}>\\n        Cafes\\n      </Button>\\n      <Button\\n        variant=\\\"contained\\\" \\n        color=\\\"primary\\\" \\n        onClick= {this.handleClick}>\\n        Community\\n      </Button>\\n    </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n */\\n\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport AppBar from '@material-ui/core/AppBar';\\nimport Tabs from '@material-ui/core/Tabs';\\nimport NoSsr from '@material-ui/core/NoSsr';\\nimport Tab from '@material-ui/core/Tab';\\nimport Typography from '@material-ui/core/Typography';\\n\\n\\nfunction TabContainer(props) {\\n  return (\\n    <Typography component=\\\"div\\\" style={{ padding: 8 * 3 }}>\\n      {props.children}\\n    </Typography>\\n  );\\n}\\n\\nTabContainer.propTypes = {\\n  children: PropTypes.node.isRequired,\\n};\\n\\nfunction LinkTab(props) {\\n  return <Tab component=\\\"a\\\" onClick={event => event.preventDefault()} {...props} />;\\n}\\n\\n/* const styles = theme => ({\\n  root: {\\n    flexGrow: 1,\\n    backgroundColor: theme.palette.background.paper,\\n  },\\n}); */\\n/* const styles = {\\n  paperContainer: {\\n      backgroundImage: `url(${\\\"/home.jpg\\\"})`\\n  }\\n};\\n */\\n\\nconst styles = {\\n  paperContainer: {\\n      height: 1356,\\n      backgroundImage: `url(${\\\"static/src/img/home.jpg\\\"})`\\n  }\\n};\\n\\nexport class Home extends React.Component {\\n  render() {\\n      return (\\n          <div style={styles.paperContainer}>\\n          </div>\\n      )\\n  }\\n}\\nclass NavTabs extends React.Component {\\n  state = {\\n    value: 0,\\n  };\\n\\n  handleChange = (event, value) => {\\n    this.setState({ value });\\n  };\\n\\n  render() {\\n    const { classes } = this.props;\\n    const { value } = this.state;\\n\\n    return (\\n      \\n      <NoSsr>\\n        <div className={classes.root}>\\n          <AppBar position=\\\"static\\\">\\n            <Tabs variant=\\\"fullWidth\\\" value={value} onChange={this.handleChange}>\\n              <LinkTab label=\\\"Community\\\" href=\\\"Community\\\" />\\n              <LinkTab label=\\\"Transporation\\\" href=\\\"Transporation\\\" />\\n              <LinkTab label=\\\"Landmarks\\\" href=\\\"Landmarks\\\" />\\n              <LinkTab label=\\\"Cafes\\\" href=\\\"Cafes\\\" />\\n            </Tabs>\\n          </AppBar>\\n          {value === 0 && <TabContainer>Community</TabContainer>}\\n          {value === 1 && <TabContainer>Transporation</TabContainer>}\\n          {value === 2 && <TabContainer>Landmarks</TabContainer>}\\n          {value === 3 && <TabContainer>Cafes</TabContainer>}\\n        </div>\\n      </NoSsr>\\n    );\\n  }\\n}\\n\\nNavTabs.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(NavTabs);\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{176:function(e,n,a){\"use strict\";a.r(n);var t=a(1),r=a.n(t),o=a(20),l=a.n(o),c=(a(74),a(33)),i=a(34),s=a(36),u=a(35),m=a(37),h=a(68),p=a(66),d=a.n(p),f=a(67),v=a.n(f),E=a(32),g=a.n(E),b=a(65),w=a.n(b),C=a(63),k=a.n(C);function y(e){return r.a.createElement(k.a,{component:\"div\",style:{padding:24}},e.children)}function j(e){return r.a.createElement(w.a,Object.assign({component:\"a\",onClick:function(e){return e.preventDefault()}},e))}var O={paperContainer:{height:1356,backgroundImage:\"url(\".concat(\"static/src/img/home.jpg\",\")\")}},L=(r.a.Component,function(e){function n(){var e,a;Object(c.a)(this,n);for(var t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(a=Object(s.a)(this,(e=Object(u.a)(n)).call.apply(e,[this].concat(r)))).state={value:0},a.handleChange=function(e,n){a.setState({value:n})},a}return Object(m.a)(n,e),Object(i.a)(n,[{key:\"render\",value:function(){var e=this.props.classes,n=this.state.value;return r.a.createElement(g.a,null,r.a.createElement(\"div\",{className:e.root},r.a.createElement(d.a,{position:\"static\"},r.a.createElement(v.a,{variant:\"fullWidth\",value:n,onChange:this.handleChange},r.a.createElement(j,{label:\"Community\",href:\"Community\"}),r.a.createElement(j,{label:\"Transporation\",href:\"Transporation\"}),r.a.createElement(j,{label:\"Landmarks\",href:\"Landmarks\"}),r.a.createElement(j,{label:\"Cafes\",href:\"Cafes\"}))),0===n&&r.a.createElement(y,null,\"Community\"),1===n&&r.a.createElement(y,null,\"Transporation\"),2===n&&r.a.createElement(y,null,\"Landmarks\"),3===n&&r.a.createElement(y,null,\"Cafes\")))}}]),n}(r.a.Component)),T=Object(h.withStyles)(O)(L);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(T,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},69:function(e,n,a){e.exports=a(176)},74:function(e,n,a){}},[[69,1,2]]]);","extractedComments":[]}